{"ast":null,"code":"var _jsxFileName = \"/home/nedal/todo-app/src/components/todo/loggingSettings.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport superagent from 'superagent';\nimport base64 from 'base-64';\nimport jwt from 'jsonwebtoken';\nimport cookie from 'react-cookies';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LoginContext = /*#__PURE__*/React.createContext();\nexport default function LoginProvider(props) {\n  _s();\n\n  const API = 'https://jam3ey.herokuapp.com';\n  const [LoggedIn, setLoggedIn] = useState(false);\n  const [user, setUser] = useState({\n    email: \"\",\n    capabilities: []\n  });\n  user.capabilities = ['read', 'create'];\n\n  const loginFunction = async (username, password) => {\n    try {\n      const response = await superagent.post(`${API}/signin`).set('authorization', `Basic ${base64.encode(`${username}:${password}`)}`);\n      validateMyToken(response.body.token);\n    } catch (err) {}\n  };\n\n  const logoutFunction = () => {\n    setLoggedIn(false);\n    setUser({});\n    cookie.remove('token');\n  };\n\n  const validateMyToken = token => {\n    if (token) {\n      const user = jwt.decode(token);\n      console.log('user >>>', user);\n      setLoggedIn(true);\n      setUser(user);\n      cookie.save('token', token);\n    } else {\n      setLoggedIn(false);\n      setUser({});\n    }\n  };\n\n  useEffect(() => {\n    const myTokenCookie = cookie.load('token');\n    validateMyToken(myTokenCookie);\n  }, []);\n\n  const can = capability => {\n    var _user$capabilities;\n\n    return user === null || user === void 0 ? void 0 : (_user$capabilities = user.capabilities) === null || _user$capabilities === void 0 ? void 0 : _user$capabilities.includes(capability);\n  };\n\n  const state = {\n    LoggedIn: LoggedIn,\n    loginFunction: loginFunction,\n    logoutFunction: logoutFunction,\n    user: user,\n    can: can\n  };\n  return /*#__PURE__*/_jsxDEV(LoginContext.Provider, {\n    value: state,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginProvider, \"/taV3ENdZyXJiRtsCrOqRKADCgs=\");\n\n_c = LoginProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginProvider\");","map":{"version":3,"sources":["/home/nedal/todo-app/src/components/todo/loggingSettings.js"],"names":["React","useEffect","useState","superagent","base64","jwt","cookie","LoginContext","createContext","LoginProvider","props","API","LoggedIn","setLoggedIn","user","setUser","email","capabilities","loginFunction","username","password","response","post","set","encode","validateMyToken","body","token","err","logoutFunction","remove","decode","console","log","save","myTokenCookie","load","can","capability","includes","state","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,SAAnB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,MAAP,MAAmB,eAAnB;;AAEA,OAAO,MAAMC,YAAY,gBAAGP,KAAK,CAACQ,aAAN,EAArB;AAEP,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAEzC,QAAMC,GAAG,GAAG,8BAAZ;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC;AAAEc,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,YAAY,EAAE;AAA3B,GAAD,CAAhC;AAEAH,EAAAA,IAAI,CAACG,YAAL,GAAoB,CAAC,MAAD,EAAS,QAAT,CAApB;;AAEA,QAAMC,aAAa,GAAG,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAChD,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMlB,UAAU,CAACmB,IAAX,CAAiB,GAAEX,GAAI,SAAvB,EAAiCY,GAAjC,CAAqC,eAArC,EAAuD,SAAQnB,MAAM,CAACoB,MAAP,CAAe,GAAEL,QAAS,IAAGC,QAAS,EAAtC,CAAyC,EAAxG,CAAvB;AACAK,MAAAA,eAAe,CAACJ,QAAQ,CAACK,IAAT,CAAcC,KAAf,CAAf;AACH,KAHD,CAGE,OAAOC,GAAP,EAAY,CAAG;AAEpB,GAND;;AAOA,QAAMC,cAAc,GAAG,MAAM;AAEzBhB,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAT,IAAAA,MAAM,CAACwB,MAAP,CAAc,OAAd;AACH,GALD;;AAOA,QAAML,eAAe,GAAIE,KAAD,IAAW;AAC/B,QAAIA,KAAJ,EAAW;AACP,YAAMb,IAAI,GAAGT,GAAG,CAAC0B,MAAJ,CAAWJ,KAAX,CAAb;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBnB,IAAxB;AACAD,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAR,MAAAA,MAAM,CAAC4B,IAAP,CAAY,OAAZ,EAAqBP,KAArB;AACH,KAND,MAMO;AACHd,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH;AACJ,GAXD;;AAYAd,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMkC,aAAa,GAAG7B,MAAM,CAAC8B,IAAP,CAAY,OAAZ,CAAtB;AACAX,IAAAA,eAAe,CAACU,aAAD,CAAf;AACH,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAME,GAAG,GAAIC,UAAD,IAAgB;AAAA;;AACxB,WAAOxB,IAAP,aAAOA,IAAP,6CAAOA,IAAI,CAAEG,YAAb,uDAAO,mBAAoBsB,QAApB,CAA6BD,UAA7B,CAAP;AACH,GAFD;;AAIA,QAAME,KAAK,GAAG;AACV5B,IAAAA,QAAQ,EAAEA,QADA;AAEVM,IAAAA,aAAa,EAAEA,aAFL;AAGVW,IAAAA,cAAc,EAAEA,cAHN;AAIVf,IAAAA,IAAI,EAAEA,IAJI;AAKVuB,IAAAA,GAAG,EAAEA;AALK,GAAd;AAOA,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEG,KAA9B;AAAA,cACK9B,KAAK,CAAC+B;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAvDuBhC,a;;KAAAA,a","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport superagent from 'superagent';\nimport base64 from 'base-64';\nimport jwt from 'jsonwebtoken';\nimport cookie from 'react-cookies';\n\nexport const LoginContext = React.createContext();\n\nexport default function LoginProvider(props) {\n\n    const API = 'https://jam3ey.herokuapp.com';\n    const [LoggedIn, setLoggedIn] = useState(false);\n    const [user, setUser] = useState({ email: \"\", capabilities: [] });\n\n    user.capabilities = ['read', 'create'];\n\n    const loginFunction = async (username, password) => {\n        try {\n            const response = await superagent.post(`${API}/signin`).set('authorization', `Basic ${base64.encode(`${username}:${password}`)}`);\n            validateMyToken(response.body.token);\n        } catch (err) { }\n\n    }\n    const logoutFunction = () => {\n\n        setLoggedIn(false);\n        setUser({});\n        cookie.remove('token');\n    }\n\n    const validateMyToken = (token) => {\n        if (token) {\n            const user = jwt.decode(token);\n            console.log('user >>>', user);\n            setLoggedIn(true);\n            setUser(user);\n            cookie.save('token', token);\n        } else {\n            setLoggedIn(false);\n            setUser({});\n        }\n    }\n    useEffect(() => {\n        const myTokenCookie = cookie.load('token');\n        validateMyToken(myTokenCookie);\n    }, []);\n\n    const can = (capability) => {\n        return user?.capabilities?.includes(capability);\n    }\n\n    const state = {\n        LoggedIn: LoggedIn,\n        loginFunction: loginFunction,\n        logoutFunction: logoutFunction,\n        user: user,\n        can: can\n    }\n    return (\n        <LoginContext.Provider value={state}>\n            {props.children}\n        </LoginContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}