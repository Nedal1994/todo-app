{"ast":null,"code":"var _jsxFileName = \"/home/nedal/todo-app/src/components/todo/context/login.js\";\nimport React from \"react\";\nimport { LoginContext } from \"./context\";\nimport { When } from 'react-if';\nimport { FormGroup, Button } from \"@blueprintjs/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault(); //not to refresh the page\n\n      this.context.loginFunction(this.state.username, this.state.password);\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(When, {\n        condition: !this.context.LoggedIn,\n        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"username\",\n            type: \"text\",\n            name: \"username\",\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"password\",\n            type: \"password\",\n            name: \"password\",\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(When, {\n        condition: this.context.LoggedIn,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.context.user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.context.logoutFunction,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\nlogin.contextType = LoginContext;","map":{"version":3,"sources":["/home/nedal/todo-app/src/components/todo/context/login.js"],"names":["React","LoginContext","When","FormGroup","Button","login","Component","constructor","props","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","context","loginFunction","state","username","password","render","LoggedIn","user","email","logoutFunction","contextType"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,IAAT,QAAqB,UAArB;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,mBAAlC;;;AACA,eAAe,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAG/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOnBC,YAPmB,GAOHC,CAAD,IAAO;AAClB,WAAKC,QAAL,CAAc;AAAE,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAA5B,OAAd;AACH,KATkB;;AAAA,SAUnBC,YAVmB,GAUHL,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACM,cAAF,GADkB,CACC;;AACnB,WAAKC,OAAL,CAAaC,aAAb,CAA2B,KAAKC,KAAL,CAAWC,QAAtC,EAAgD,KAAKD,KAAL,CAAWE,QAA3D;AACH,KAbkB;;AAEf,SAAKF,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAIH;;AASDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAE,CAAC,KAAKL,OAAL,CAAaM,QAA/B;AAAA,+BACI,QAAC,SAAD;AAAW,UAAA,QAAQ,EAAE,KAAKR,YAA1B;AAAA,kCACI;AAAO,YAAA,WAAW,EAAC,UAAnB;AAA8B,YAAA,IAAI,EAAC,MAAnC;AAA0C,YAAA,IAAI,EAAC,UAA/C;AAA0D,YAAA,QAAQ,EAAE,KAAKN;AAAzE;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,WAAW,EAAC,UAAnB;AAA8B,YAAA,IAAI,EAAC,UAAnC;AAA8C,YAAA,IAAI,EAAC,UAAnD;AAA8D,YAAA,QAAQ,EAAE,KAAKA;AAA7E;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAE,KAAKQ,OAAL,CAAaM,QAA9B;AAAA,gCAEI;AAAA,oBACK,KAAKN,OAAL,CAAaO,IAAb,CAAkBC;AADvB;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAKI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,KAAKR,OAAL,CAAaS,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA,oBADJ;AAmBH;;AAtC8C;AAA9BrB,K,CAEVsB,W,GAAc1B,Y","sourcesContent":["import React from \"react\";\nimport { LoginContext } from \"./context\";\nimport { When } from 'react-if';\nimport { FormGroup, Button } from \"@blueprintjs/core\";\nexport default class login extends React.Component {\n\n    static contextType = LoginContext;\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: \"\",\n            password: \"\"\n        }\n    }\n    handleChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();//not to refresh the page\n        this.context.loginFunction(this.state.username, this.state.password);\n    }\n\n    render() {\n        return (\n            <>\n                <When condition={!this.context.LoggedIn}>\n                    <FormGroup onSubmit={this.handleSubmit}>\n                        <input placeholder=\"username\" type='text' name='username' onChange={this.handleChange} />\n                        <input placeholder=\"password\" type='password' name='password' onChange={this.handleChange} />\n                        <button type=\"submit\">login</button>\n                    </FormGroup>\n                </When>\n                <When condition={this.context.LoggedIn}\n                >\n                    <div>\n                        {this.context.user.email}\n                    </div>\n                    <Button onClick={this.context.logoutFunction}>Logout</Button>\n                </When>\n\n            </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}