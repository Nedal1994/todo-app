{"ast":null,"code":"var _jsxFileName = \"/home/nedal/todo-app/src/components/list/List.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from 'react';\nimport { SettingsContext } from '../../context/settings.js';\nimport ListItem from '../listItem/ListItem.js';\nimport './list.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction List(props) {\n  _s();\n\n  // pass our context singleton into our useContext hook\n  const settings = useContext(SettingsContext);\n  const [currentPage, setPage] = useState(1);\n\n  function changePage(e) {\n    if (e.target.id === 'next') {\n      setPage(currentPage + 1);\n      return;\n    } else if (e.target.id === 'prev') {\n      setPage(currentPage - 1);\n      return;\n    }\n\n    return;\n  }\n\n  const lastIndex = currentPage * settings.numberOfItems;\n  const firstIndex = lastIndex - settings.numberOfItems;\n  const listItems = props.list.slice(firstIndex, lastIndex);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"cardContainer\",\n      children: listItems.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n        item: item,\n        toggleComplete: props.toggleComplete,\n        deleteItem: props.deleteItem\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"nextPrevButtons\",\n      children: [currentPage > 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"prev\",\n        onClick: changePage,\n        type: \"button\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this) : null, props.list.length > settings.numberOfItems ? /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"next\",\n        onClick: changePage,\n        type: \"button\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(List, \"27l8cXn95jIaDuqtbNPxCiSeZ1U=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/nedal/todo-app/src/components/list/List.js"],"names":["useContext","useState","SettingsContext","ListItem","List","props","settings","currentPage","setPage","changePage","e","target","id","lastIndex","numberOfItems","firstIndex","listItems","list","slice","map","item","toggleComplete","deleteItem","length"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,eAAT,QAAgC,2BAAhC;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAO,aAAP;;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAEnB;AACA,QAAMC,QAAQ,GAAGN,UAAU,CAACE,eAAD,CAA3B;AACA,QAAM,CAACK,WAAD,EAAcC,OAAd,IAAyBP,QAAQ,CAAC,CAAD,CAAvC;;AAEA,WAASQ,UAAT,CAAoBC,CAApB,EAAuB;AACrB,QAAIA,CAAC,CAACC,MAAF,CAASC,EAAT,KAAgB,MAApB,EAA4B;AAC1BJ,MAAAA,OAAO,CAACD,WAAW,GAAG,CAAf,CAAP;AACA;AACD,KAHD,MAGO,IAAIG,CAAC,CAACC,MAAF,CAASC,EAAT,KAAgB,MAApB,EAA4B;AACjCJ,MAAAA,OAAO,CAACD,WAAW,GAAG,CAAf,CAAP;AACA;AACD;;AACD;AACD;;AAED,QAAMM,SAAS,GAAGN,WAAW,GAAGD,QAAQ,CAACQ,aAAzC;AACA,QAAMC,UAAU,GAAGF,SAAS,GAAGP,QAAQ,CAACQ,aAAxC;AACA,QAAME,SAAS,GAAGX,KAAK,CAACY,IAAN,CAAWC,KAAX,CAAiBH,UAAjB,EAA6BF,SAA7B,CAAlB;AAGA,sBACE;AAAA,4BACE;AAAK,MAAA,EAAE,EAAC,eAAR;AAAA,gBACGG,SAAS,CAACG,GAAV,CAAcC,IAAI,iBACjB,QAAC,QAAD;AAA0B,QAAA,IAAI,EAAEA,IAAhC;AAAsC,QAAA,cAAc,EAAEf,KAAK,CAACgB,cAA5D;AAA4E,QAAA,UAAU,EAAEhB,KAAK,CAACiB;AAA9F,SAAiBF,IAAI,CAACR,EAAtB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,EAAE,EAAC,iBAAR;AAAA,iBACGL,WAAW,GAAG,CAAd,gBACC;AAAQ,QAAA,EAAE,EAAC,MAAX;AAAkB,QAAA,OAAO,EAAEE,UAA3B;AAAuC,QAAA,IAAI,EAAC,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAIG,IALN,EAMGJ,KAAK,CAACY,IAAN,CAAWM,MAAX,GAAoBjB,QAAQ,CAACQ,aAA7B,gBACC;AAAQ,QAAA,EAAE,EAAC,MAAX;AAAkB,QAAA,OAAO,EAAEL,UAA3B;AAAuC,QAAA,IAAI,EAAC,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAIG,IAVN;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAqBD;;GA3CQL,I;;KAAAA,I;AA6CT,eAAeA,IAAf","sourcesContent":["import { useContext, useState } from 'react';\nimport { SettingsContext } from '../../context/settings.js';\nimport ListItem from '../listItem/ListItem.js';\nimport './list.scss';\n\nfunction List(props) {\n\n  // pass our context singleton into our useContext hook\n  const settings = useContext(SettingsContext);\n  const [currentPage, setPage] = useState(1);\n\n  function changePage(e) {\n    if (e.target.id === 'next') {\n      setPage(currentPage + 1);\n      return;\n    } else if (e.target.id === 'prev') {\n      setPage(currentPage - 1);\n      return;\n    }\n    return;\n  }\n\n  const lastIndex = currentPage * settings.numberOfItems;\n  const firstIndex = lastIndex - settings.numberOfItems;\n  const listItems = props.list.slice(firstIndex, lastIndex);\n\n\n  return (\n    <>\n      <div id='cardContainer'>\n        {listItems.map(item => (\n          <ListItem key = {item.id} item={item} toggleComplete={props.toggleComplete} deleteItem={props.deleteItem} />\n        ))}\n      </div>\n      <div id=\"nextPrevButtons\">\n        {currentPage > 1 ? (\n          <button id=\"prev\" onClick={changePage} type=\"button\">\n            Back\n          </button>\n        ) : null}\n        {props.list.length > settings.numberOfItems ? (\n          <button id=\"next\" onClick={changePage} type=\"button\">\n            Next\n          </button>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}