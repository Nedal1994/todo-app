{"ast":null,"code":"var _jsxFileName = \"/home/nedal/todo-app/src/context/auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport cookie from 'react-cookies';\nimport axios from 'axios';\nimport jwt from 'jsonwebtoken';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/React.createContext();\nconst SECRET = process.env.REACT_APP_SECRET || 'secretstring';\nconst DATABASE_URL = process.env.REACT_APP_URL;\n\nfunction AuthProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [user, setUser] = useState({});\n  const [token, setToken] = useState(null);\n  let state = {\n    isLoggedIn,\n    user,\n    isAuthorized,\n    login,\n    token,\n    logout,\n    setLogInState,\n    register\n  };\n\n  function isAuthorized(capability) {\n    var _user$capabilities;\n\n    // check user capilities and return a boolean\n    return user === null || user === void 0 ? void 0 : (_user$capabilities = user.capabilities) === null || _user$capabilities === void 0 ? void 0 : _user$capabilities.includes(capability);\n  }\n\n  async function login(username, password) {\n    if (username === '' || password === '') {\n      alert('please enter username and password');\n    }\n\n    try {\n      let response = await axios.post(`${DATABASE_URL}/signin`, {}, {\n        auth: {\n          username,\n          password\n        }\n      });\n      const token = jwt.sign(response.data.user, SECRET);\n      validateToken(token);\n    } catch (e) {\n      console.log('login error', e);\n    }\n  }\n\n  function validateToken(token) {\n    try {\n      let user = jwt.verify(token, SECRET);\n      setLogInState(true, token, user);\n    } catch (e) {\n      setLogInState(false, null, {});\n      console.log('Error validating token:', e);\n    }\n  }\n\n  function logout() {\n    if (isLoggedIn) {\n      setLogInState(false, null, {});\n    }\n  }\n\n  function setLogInState(boolean, token, user) {\n    cookie.save('auth', user === null || user === void 0 ? void 0 : user.token);\n    setUser(user);\n    setLoggedIn(boolean);\n    setToken(token);\n  }\n\n  useEffect(() => {\n    const qs = new URLSearchParams(window.location.search);\n    const cookieToken = cookie.load('auth');\n    const token = qs.get('token');\n    cookie.save('auth', token || cookieToken || null);\n    validateToken(token);\n  }, []);\n\n  async function register(username, password) {\n    if (username === '' || password === '') {\n      alert('please enter username and password');\n    }\n\n    try {\n      let res = await axios.post(`${DATABASE_URL}/signup`, {\n        username,\n        password,\n        role: 'admin'\n      });\n      const token = jwt.sign(res.data.user, SECRET);\n      validateToken(token);\n    } catch (err) {\n      console.log('error signing in', err);\n      return false;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: state,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuthProvider, \"QYSl7TY9FuseSyXgbpWvXeaO4yA=\");\n\n_c = AuthProvider;\nexport default AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/nedal/todo-app/src/context/auth.js"],"names":["React","useEffect","useState","cookie","axios","jwt","AuthContext","createContext","SECRET","process","env","REACT_APP_SECRET","DATABASE_URL","REACT_APP_URL","AuthProvider","children","isLoggedIn","setLoggedIn","user","setUser","token","setToken","state","isAuthorized","login","logout","setLogInState","register","capability","capabilities","includes","username","password","alert","response","post","auth","sign","data","validateToken","e","console","log","verify","boolean","save","qs","URLSearchParams","window","location","search","cookieToken","load","get","res","role","err"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport cookie from 'react-cookies';\nimport axios from 'axios';\nimport jwt from 'jsonwebtoken';\n\n\nexport const AuthContext = React.createContext();\n\nconst SECRET = process.env.REACT_APP_SECRET || 'secretstring';\nconst DATABASE_URL = process.env.REACT_APP_URL;\n\nfunction AuthProvider ({children}) {\n\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [user, setUser] = useState({});\n  const [token, setToken] = useState(null);\n\n  let state = {\n    isLoggedIn,\n    user,\n    isAuthorized,\n    login,\n    token,\n    logout,\n    setLogInState,\n    register\n  };\n\n  function isAuthorized(capability) {\n    // check user capilities and return a boolean\n    return user?.capabilities?.includes(capability);\n  }\n\n  async function login(username, password) {\n    if (username === '' || password === '') {\n      alert('please enter username and password');\n    }\n\n    try {\n      let response = await axios.post(`${DATABASE_URL}/signin`, {}, {\n        auth: {\n          username,\n          password\n        }\n      });\n      const token = jwt.sign(response.data.user, SECRET);\n      validateToken(token);\n    } catch (e) {\n      console.log('login error', e);\n    }\n  }\n\n  function validateToken(token) {\n    try{\n      let user = jwt.verify(token, SECRET);\n      setLogInState(true, token, user);\n    } catch (e) {\n      setLogInState(false, null, {});\n      console.log('Error validating token:', e);\n    }\n  }\n\n  function logout() {\n    if (isLoggedIn) {\n      setLogInState(false, null, {});\n    }\n  }\n\n  function setLogInState(boolean, token, user) {\n    cookie.save('auth', user?.token);\n    setUser(user);\n    setLoggedIn(boolean);\n    setToken(token);\n  }\n\n  useEffect(() => {\n    const qs = new URLSearchParams(window.location.search);\n    const cookieToken = cookie.load('auth');\n    const token = qs.get('token');\n    cookie.save('auth', token || cookieToken || null);\n    validateToken(token);\n  }, []);\n\n  async function register (username, password) {\n    if(username === '' || password === '') {\n      alert('please enter username and password');\n    }\n\n    try {\n      let res = await axios.post(`${DATABASE_URL}/signup`, { username, password, role: 'admin' });\n      const token = jwt.sign(res.data.user, SECRET);\n      validateToken(token);\n    } catch(err) {\n      console.log('error signing in', err);\n      return false;\n    }\n  }\n\n  return (\n    <AuthContext.Provider value={state}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport default AuthProvider;\n"]},"metadata":{},"sourceType":"module"}