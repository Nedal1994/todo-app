{"ast":null,"code":"var _jsxFileName = \"/home/nedal/todo-app/src/components/viewOptions/viewOptions.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from 'react';\nimport { SettingsContext } from '../../context/settings.js';\nimport { RadioGroup, Radio } from '@blueprintjs/core';\nimport './viewOptions.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ViewOptions() {\n  _s();\n\n  // pass our context singleton into our useContext hook\n  const settings = useContext(SettingsContext);\n  settings;\n  const [radioSelected, setRadioSelected] = useState(false);\n\n  function handleRadioChange(e) {\n    settings.setCompleted(e.target.value);\n    setRadioSelected(e.currentTarget.value);\n  }\n\n  function handleInputChange(e) {\n    settings.setNumberOfItems(parseInt(e.target.value));\n  }\n\n  function handleFormSubmit(e) {\n    e.preventDefault(); // put items in storage\n\n    let stringifiedObject = JSON.stringify({\n      numberOfItems: settings.numberOfItems,\n      showCompleted: settings.showCompleted\n    });\n    localStorage.setItem('userPreferences', stringifiedObject);\n    alert('view options saved!');\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Change Your View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        label: \"Show Completed Tasks?\",\n        onChange: handleRadioChange,\n        selectedValue: radioSelected,\n        children: [/*#__PURE__*/_jsxDEV(Radio, {\n          label: \"Yes\",\n          value: \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Radio, {\n          label: \"No\",\n          value: \"false\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Tasks per page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleInputChange,\n          min: \"0\",\n          step: \"1\",\n          name: \"tasksPerPage\",\n          type: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ViewOptions, \"uk1mnlCOC+htH0VyBYzcfVZwXMA=\");\n\n_c = ViewOptions;\nexport default ViewOptions;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewOptions\");","map":{"version":3,"sources":["/home/nedal/todo-app/src/components/viewOptions/viewOptions.js"],"names":["useContext","useState","SettingsContext","RadioGroup","Radio","ViewOptions","settings","radioSelected","setRadioSelected","handleRadioChange","e","setCompleted","target","value","currentTarget","handleInputChange","setNumberOfItems","parseInt","handleFormSubmit","preventDefault","stringifiedObject","JSON","stringify","numberOfItems","showCompleted","localStorage","setItem","alert"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,eAAT,QAAgC,2BAAhC;AACA,SAASC,UAAT,EAAqBC,KAArB,QAAkC,mBAAlC;AACA,OAAO,oBAAP;;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACrB;AACA,QAAMC,QAAQ,GAAGN,UAAU,CAACE,eAAD,CAA3B;AACAI,EAAAA,QAAQ;AAER,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,KAAD,CAAlD;;AAEA,WAASQ,iBAAT,CAA2BC,CAA3B,EAA8B;AAC5BJ,IAAAA,QAAQ,CAACK,YAAT,CAAsBD,CAAC,CAACE,MAAF,CAASC,KAA/B;AACAL,IAAAA,gBAAgB,CAACE,CAAC,CAACI,aAAF,CAAgBD,KAAjB,CAAhB;AACD;;AAED,WAASE,iBAAT,CAA2BL,CAA3B,EAA8B;AAC5BJ,IAAAA,QAAQ,CAACU,gBAAT,CAA0BC,QAAQ,CAACP,CAAC,CAACE,MAAF,CAASC,KAAV,CAAlC;AACD;;AAED,WAASK,gBAAT,CAA0BR,CAA1B,EAA6B;AAC3BA,IAAAA,CAAC,CAACS,cAAF,GAD2B,CAE3B;;AACA,QAAIC,iBAAiB,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEC,MAAAA,aAAa,EAAEjB,QAAQ,CAACiB,aAA1B;AAAyCC,MAAAA,aAAa,EAAElB,QAAQ,CAACkB;AAAjE,KAAf,CAAxB;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCN,iBAAxC;AACAO,IAAAA,KAAK,CAAC,qBAAD,CAAL;AACD;;AAGD,sBACE;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAET,gBAAhB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AACE,QAAA,KAAK,EAAC,uBADR;AAEE,QAAA,QAAQ,EAAET,iBAFZ;AAGE,QAAA,aAAa,EAAEF,aAHjB;AAAA,gCAKE,QAAC,KAAD;AAAO,UAAA,KAAK,EAAC,KAAb;AAAmB,UAAA,KAAK,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,gBALF,eAME,QAAC,KAAD;AAAO,UAAA,KAAK,EAAC,IAAb;AAAkB,UAAA,KAAK,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAUE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,QAAQ,EAAEQ,iBAAjB;AAAoC,UAAA,GAAG,EAAC,GAAxC;AAA4C,UAAA,IAAI,EAAC,GAAjD;AAAqD,UAAA,IAAI,EAAC,cAA1D;AAAyE,UAAA,IAAI,EAAC;AAA9E;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAcE;AAAA,+BACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAsBD;;GA/CQV,W;;KAAAA,W;AAmDT,eAAeA,WAAf","sourcesContent":["import { useContext, useState } from 'react';\nimport { SettingsContext } from '../../context/settings.js';\nimport { RadioGroup, Radio } from '@blueprintjs/core';\nimport './viewOptions.scss';\n\nfunction ViewOptions() {\n  // pass our context singleton into our useContext hook\n  const settings = useContext(SettingsContext);\n  settings;\n\n  const [radioSelected, setRadioSelected] = useState(false);\n\n  function handleRadioChange(e) {\n    settings.setCompleted(e.target.value);\n    setRadioSelected(e.currentTarget.value);\n  }\n\n  function handleInputChange(e) {\n    settings.setNumberOfItems(parseInt(e.target.value));\n  }\n\n  function handleFormSubmit(e) {\n    e.preventDefault();\n    // put items in storage\n    let stringifiedObject = JSON.stringify({ numberOfItems: settings.numberOfItems, showCompleted: settings.showCompleted });\n    localStorage.setItem('userPreferences', stringifiedObject);\n    alert('view options saved!');\n  }\n\n\n  return (\n    <>\n      <form onSubmit={handleFormSubmit}>\n        <h2>Change Your View</h2>\n        <RadioGroup\n          label=\"Show Completed Tasks?\"\n          onChange={handleRadioChange}\n          selectedValue={radioSelected}\n        >\n          <Radio label=\"Yes\" value='true' />\n          <Radio label=\"No\" value='false' />\n        </RadioGroup>\n        <label>\n          <span>Tasks per page</span>\n          <input onChange={handleInputChange} min=\"0\" step=\"1\" name=\"tasksPerPage\" type=\"number\" />\n        </label>\n        <label>\n          <button type=\"submit\">Save</button>\n        </label>\n      </form>\n    </>\n  );\n}\n\n\n\nexport default ViewOptions;\n"]},"metadata":{},"sourceType":"module"}