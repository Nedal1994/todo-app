{"ast":null,"code":"var _jsxFileName = \"/home/nedal/todo-app/src/components/todo/context/loginContext.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport cookie from 'react-cookies';\nimport jwt from 'jsonwebtoken';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst testUsers = {\n  admin: {\n    password: \"password\",\n    name: \"Administrator\",\n    role: \"admin\",\n    capabilities: [\"create\", \"read\", \"update\", \"delete\"]\n  },\n  editor: {\n    password: \"password\",\n    name: \"Editor\",\n    role: \"editor\",\n    capabilities: [\"read\", \"update\"]\n  },\n  writer: {\n    password: \"password\",\n    name: \"Writer\",\n    role: \"writer\",\n    capabilities: [\"create\"]\n  }\n};\nexport const LoginContext = /*#__PURE__*/React.createContext();\nexport default function LoginProvider(props) {\n  _s();\n\n  let [loggedIn, setloggedIn] = useState(false);\n  let [user, setUser] = useState({\n    capabilities: []\n  });\n  let [token, setToken] = useState(\"\");\n\n  const can = capability => {\n    var _user$capabilities;\n\n    return user === null || user === void 0 ? void 0 : (_user$capabilities = user.capabilities) === null || _user$capabilities === void 0 ? void 0 : _user$capabilities.includes(capability);\n  };\n\n  const login = (username, password) => {\n    if (testUsers[username]) {\n      const token = jwt.sign(testUsers[username], process.env.REACT_APP_SECRET || \"2000\");\n      validateToken(token);\n      console.log(token, \"toooooooooken\");\n    }\n  };\n\n  const logout = () => {\n    setLoginState(false, null, {});\n  };\n\n  const validateToken = async token => {\n    try {\n      // let response= await (await superagent.post('https://houses--safe.herokuapp.com/signin')).set('authorization', `Basic ${base64.encode(`${username}:${password}`)}`)\n      let user = jwt.verify(token, process.env.REACT_APP_SECRET || \"2000\");\n      console.log(token, \"toooooooooken\");\n      setLoginState(true, token, user);\n    } catch (e) {\n      setLoginState(false, null, {});\n      console.log(\"Token Validation Error\", e);\n    }\n  };\n\n  const setLoginState = (loggedIn, token, user) => {\n    cookie.save(\"auth\", token);\n    setloggedIn(loggedIn);\n    setToken(token);\n    setUser(user);\n  };\n\n  useEffect(() => {\n    const qs = new URLSearchParams(window.location.search);\n    const cookieToken = cookie.load(\"auth\");\n    const token = qs.get(\"token\") || cookieToken || null;\n    validateToken(token);\n  });\n  const state = {\n    loggedIn,\n    login,\n    logout,\n    user,\n    token,\n    can\n  };\n  return /*#__PURE__*/_jsxDEV(LoginContext.Provider, {\n    value: state,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginProvider, \"D5iihokT1qm+Rh+PG9b4o02YT+w=\");\n\n_c = LoginProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginProvider\");","map":{"version":3,"sources":["/home/nedal/todo-app/src/components/todo/context/loginContext.js"],"names":["React","cookie","jwt","testUsers","admin","password","name","role","capabilities","editor","writer","LoginContext","createContext","LoginProvider","props","loggedIn","setloggedIn","useState","user","setUser","token","setToken","can","capability","includes","login","username","sign","process","env","REACT_APP_SECRET","validateToken","console","log","logout","setLoginState","verify","e","save","useEffect","qs","URLSearchParams","window","location","search","cookieToken","load","get","state","children"],"mappings":"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","sourcesContent":["import React from 'react';\nimport cookie from 'react-cookies';\nimport jwt from 'jsonwebtoken';\n\nconst testUsers = {\n  admin: {\n    password: \"password\",\n    name: \"Administrator\",\n    role: \"admin\",\n    capabilities: [\"create\", \"read\", \"update\", \"delete\"],\n  },\n  editor: {\n    password: \"password\",\n    name: \"Editor\",\n    role: \"editor\",\n    capabilities: [\"read\", \"update\"],\n  },\n  writer: {\n    password: \"password\",\n    name: \"Writer\",\n    role: \"writer\",\n    capabilities: [\"create\"],\n  },\n};\n\nexport const LoginContext = React.createContext();\n\nexport default function LoginProvider(props) {\n  let [loggedIn, setloggedIn] = useState(false);\n  let [user, setUser] = useState({ capabilities: [] });\n  let [token, setToken] = useState(\"\");\n\n  const can = (capability) => {\n    return user?.capabilities?.includes(capability);\n  };\n\n  const login = (username, password) => {\n    if (testUsers[username]) {\n      const token = jwt.sign(\n        testUsers[username],\n        process.env.REACT_APP_SECRET || \"2000\"\n      );\n      validateToken(token);\n      console.log(token, \"toooooooooken\");\n    }\n  };\n\n  const logout = () => {\n    setLoginState(false, null, {});\n  };\n\n  const validateToken = async (token) => {\n    try {\n      // let response= await (await superagent.post('https://houses--safe.herokuapp.com/signin')).set('authorization', `Basic ${base64.encode(`${username}:${password}`)}`)\n      let user = jwt.verify(token, process.env.REACT_APP_SECRET || \"2000\");\n      console.log(token, \"toooooooooken\");\n      setLoginState(true, token, user);\n    } catch (e) {\n      setLoginState(false, null, {});\n      console.log(\"Token Validation Error\", e);\n    }\n  };\n\n  const setLoginState = (loggedIn, token, user) => {\n    cookie.save(\"auth\", token);\n    setloggedIn(loggedIn);\n    setToken(token);\n    setUser(user);\n  };\n\n  useEffect(() => {\n    const qs = new URLSearchParams(window.location.search);\n    const cookieToken = cookie.load(\"auth\");\n    const token = qs.get(\"token\") || cookieToken || null;\n    validateToken(token);\n  });\n\n  const state = {\n    loggedIn,\n    login,\n    logout,\n    user,\n    token,\n    can,\n  };\n\n  return (\n    <LoginContext.Provider value={state}>\n      {props.children}\n    </LoginContext.Provider>\n  );\n}"]},"metadata":{},"sourceType":"module"}