{"ast":null,"code":"var _jsxFileName = \"/home/nedal/todo-app/src/components/todo/todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport useForm from \"../../hook/form\";\nimport Form from \"./Form/form\";\nimport List from \"./List/list\";\nimport Header from \"./Header\";\nimport \"./todo.scss\";\nimport { v4 as uuid } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ToDo = () => {\n  _s();\n\n  const [list, setList] = useState([]);\n  const [incomplete, setIncomplete] = useState([]);\n  const {\n    handleChange,\n    handleSubmit\n  } = useForm(addItem);\n\n  function addItem(item) {\n    console.log(item);\n    item.id = uuid();\n    item.complete = false;\n    setList([...list, item]);\n  }\n\n  function deleteItem(id) {\n    const items = list.filter(item => item.id !== id);\n    setList(items);\n  }\n\n  function toggleComplete(id) {\n    const items = list.map(item => {\n      if (item.id == id) {\n        item.complete = !item.complete;\n      }\n\n      return item;\n    });\n    setList(items);\n  }\n\n  useEffect(() => {\n    let incompleteCount = list.filter(item => !item.complete).length;\n    setIncomplete(incompleteCount);\n    document.title = `To Do List: ${incomplete}`;\n  }, [list]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      className: \"mainHeader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      style: {\n        width: \"1000px\",\n        margin: \"0 auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"bp3-navbar .modifier \",\n        style: {\n          color: \"white\",\n          backgroundColor: \"blue\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            marginTop: \"5%\",\n            padding: \"2%\"\n          },\n          children: [\"To Do List: (\", incomplete, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        handleSubmit: handleSubmit,\n        handleChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        list: list,\n        toggleComplete: toggleComplete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ToDo, \"KGnI4uRsfdxDMA58OT2wFkFYU3Q=\", false, function () {\n  return [useForm];\n});\n\n_c = ToDo;\nexport default ToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"sources":["/home/nedal/todo-app/src/components/todo/todo.js"],"names":["React","useEffect","useState","useForm","Form","List","Header","v4","uuid","ToDo","list","setList","incomplete","setIncomplete","handleChange","handleSubmit","addItem","item","console","log","id","complete","deleteItem","items","filter","toggleComplete","map","incompleteCount","length","document","title","width","margin","color","backgroundColor","marginTop","padding"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport useForm from \"../../hook/form\";\nimport Form from \"./Form/form\";\nimport List from \"./List/list\";\nimport Header from \"./Header\";\nimport \"./todo.scss\";\n\nimport { v4 as uuid } from \"uuid\";\n\nconst ToDo = () => {\n  const [list, setList] = useState([]);\n  const [incomplete, setIncomplete] = useState([]);\n  const { handleChange, handleSubmit } = useForm(addItem);\n\n  function addItem(item) {\n    console.log(item);\n    item.id = uuid();\n    item.complete = false;\n    setList([...list, item]);\n  }\n\n  function deleteItem(id) {\n    const items = list.filter((item) => item.id !== id);\n    setList(items);\n  }\n\n  function toggleComplete(id) {\n    const items = list.map((item) => {\n      if (item.id == id) {\n        item.complete = !item.complete;\n      }\n      return item;\n    });\n\n    setList(items);\n  }\n\n  useEffect(() => {\n    let incompleteCount = list.filter((item) => !item.complete).length;\n    setIncomplete(incompleteCount);\n    document.title = `To Do List: ${incomplete}`;\n  }, [list]);\n\n  return (\n    <>\n      <Header className='mainHeader'/>\n      <header style={{ width: \"1000px\", margin: \"0 auto\" }}>\n        <nav\n          className=\"bp3-navbar .modifier \"\n          style={{ color: \"white\", backgroundColor: \"blue\"}}\n        >\n          <h2\n            style={{\n              marginTop: \"5%\",\n              padding: \"2%\",\n            }}\n          >\n            To Do List: ({incomplete})\n          </h2>\n        </nav>\n      </header>\n      <div className=\"container\">\n        <Form handleSubmit={handleSubmit} handleChange={handleChange} />\n\n        <List list={list} toggleComplete={toggleComplete} />\n      </div>\n    </>\n  );\n};\n\nexport default ToDo;\n"]},"metadata":{},"sourceType":"module"}