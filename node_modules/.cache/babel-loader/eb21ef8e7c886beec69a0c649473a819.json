{"ast":null,"code":"var _jsxFileName = \"/home/nedal/todo-app/src/components/todo/List/list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Button, Card, Elevation } from \"@blueprintjs/core\";\nimport ReactPaginate from \"react-paginate\";\nimport { SettingsContext } from \"../context/context\";\nimport Auth from '../context/auth';\nimport \"./list.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction List(props) {\n  _s();\n\n  const settings = useContext(SettingsContext);\n  const [pageNumber, setPageNumber] = useState(0);\n  const [pageCount, setPageCount] = useState(1);\n  let usersPerPage = settings.numOfItems;\n  const pagesVisited = pageNumber * usersPerPage;\n  useEffect(() => {\n    let page = Math.ceil(props.list.length / settings.numOfItems);\n    setPageCount(page);\n    console.log(settings.numOfItems, \"settings.numOfItems\");\n  }, [props.list, settings.numOfItems]); //function to display completedItems:\n\n  function display(status) {\n    let arrOfCompletedItem;\n\n    if (status == true) {\n      arrOfCompletedItem = props.list.filter(item => item.complete);\n    } else {\n      return props.list;\n    }\n\n    return arrOfCompletedItem;\n  }\n\n  const displayUsers = display(settings.display).slice(pagesVisited, pagesVisited + usersPerPage).map(item => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div-flex1\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        interactive: true,\n        elevation: Elevation.TWO,\n        className: \"cardDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Assigned to: \", item.assignee]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Difficulty: \", item.difficulty]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Auth, {\n          capability: \"update\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => props.toggleComplete(item.id),\n            children: [\"Complete: \", item.complete.toString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Auth, {\n          capability: \"delete\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => props.deleteItem(item.id),\n            children: \"Delete:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this);\n  });\n\n  const changePage = _ref => {\n    let {\n      selected\n    } = _ref;\n    setPageNumber(selected);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [displayUsers, /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      previousLabel: \"Previous\",\n      nextLabel: \"Next\",\n      pageCount: pageCount,\n      onPageChange: changePage,\n      containerClassName: \"paginationBttns\",\n      previousLinkClassName: \"previousBttn\",\n      nextLinkClassName: \"nextBttn\",\n      disabledClassName: \"paginationDisabled\",\n      activeClassName: \"paginationActive\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(List, \"HQiJsSmvXe9QjUjZDS+Q0G38Bt0=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/nedal/todo-app/src/components/todo/List/list.js"],"names":["React","useContext","useEffect","useState","Button","Card","Elevation","ReactPaginate","SettingsContext","Auth","List","props","settings","pageNumber","setPageNumber","pageCount","setPageCount","usersPerPage","numOfItems","pagesVisited","page","Math","ceil","list","length","console","log","display","status","arrOfCompletedItem","filter","item","complete","displayUsers","slice","map","TWO","text","assignee","difficulty","toggleComplete","id","toString","deleteItem","changePage","selected"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { Button, Card, Elevation } from \"@blueprintjs/core\";\nimport ReactPaginate from \"react-paginate\";\nimport { SettingsContext } from \"../context/context\";\nimport Auth from '../context/auth'\nimport \"./list.scss\";\n\nfunction List(props) {\n  const settings = useContext(SettingsContext);\n  const [pageNumber, setPageNumber] = useState(0);\n  const [pageCount, setPageCount] = useState(1);\n  let usersPerPage = settings.numOfItems;\n  const pagesVisited = pageNumber * usersPerPage;\n\n  useEffect(() => {\n    let page = Math.ceil(props.list.length / settings.numOfItems);\n    setPageCount(page);\n    console.log(settings.numOfItems, \"settings.numOfItems\");\n  }, [props.list, settings.numOfItems]);\n\n  //function to display completedItems:\n  function display(status) {\n    let arrOfCompletedItem;\n    if (status == true) {\n      arrOfCompletedItem = props.list.filter((item) => item.complete);\n    } else {\n      return props.list;\n    }\n    return arrOfCompletedItem;\n  }\n\n  const displayUsers = display(settings.display)\n    .slice(pagesVisited, pagesVisited + usersPerPage)\n    .map((item) => {\n      return (\n        <div key={item.id} className=\"div-flex1\">\n          <Card\n            interactive={true}\n            elevation={Elevation.TWO}\n            className=\"cardDiv\"\n          >\n            <p>{item.text}</p>\n            <p>\n              <small>Assigned to: {item.assignee}</small>\n            </p>\n            <p>\n              <small>Difficulty: {item.difficulty}</small>\n            </p>\n            <Auth capability=\"update\">\n              <Button onClick={() => props.toggleComplete(item.id)}>\n                Complete: {item.complete.toString()}\n              </Button>\n            </Auth>\n\n            <Auth capability=\"delete\">\n              <Button onClick={() => props.deleteItem(item.id)}>Delete:</Button>\n            </Auth>\n          </Card>\n        </div>\n      );\n    });\n\n  const changePage = ({ selected }) => {\n    setPageNumber(selected);\n  };\n  return (\n    <>\n      {displayUsers}\n      <ReactPaginate\n        previousLabel={\"Previous\"}\n        nextLabel={\"Next\"}\n        pageCount={pageCount}\n        onPageChange={changePage}\n        containerClassName={\"paginationBttns\"}\n        previousLinkClassName={\"previousBttn\"}\n        nextLinkClassName={\"nextBttn\"}\n        disabledClassName={\"paginationDisabled\"}\n        activeClassName={\"paginationActive\"}\n      />\n    </>\n  );\n}\n\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}