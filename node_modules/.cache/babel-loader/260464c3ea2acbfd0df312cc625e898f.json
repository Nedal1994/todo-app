{"ast":null,"code":"var _jsxFileName = \"/home/nedal/todo-app/src/components/todo/list.js\",\n    _s = $RefreshSig$();\n\nimport { React, useContext, useState } from 'react';\nimport { Button, Card, Elevation } from '@blueprintjs/core';\nimport ReactPaginate from 'react-paginate';\nimport { Settings } from '../../context/settings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function list(props) {\n  _s();\n\n  const settings = useContext(Settings);\n  const [page, setPage] = useState(0);\n  const users = settings.numberOfItems;\n  const visitedPage = page * users;\n  const displayUsers = props.list.slice(visitedPage, visitedPage + users).map(item => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        interactive: true,\n        elevation: Elevation.TWO,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Assigned to: \", item.assignee]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Difficulty: \", item.difficulty]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => props.toggleComplete(item.id),\n          children: [\"Complete: \", item.complete.toString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this);\n  });\n  const pageCount = Math.ceil(props.list.length / users);\n\n  const changePage = _ref => {\n    let {\n      selectedPage\n    } = _ref;\n    setPage(selectedPage);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [displayUsers, /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      previousLabel: 'Previous page',\n      nextLabel: 'Next Page',\n      pageCount: pageCount,\n      onPageChange: changePage,\n      containerClassName: 'paginationButtons',\n      previousLinkClassName: 'previousButton',\n      nextLinkClassName: 'nextButton',\n      disabledClassName: 'paginationDisabled',\n      activeClassName: 'paginationActive'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(list, \"nmrcpg90/7B/XOHwJ5tqgimM4IU=\");","map":{"version":3,"sources":["/home/nedal/todo-app/src/components/todo/list.js"],"names":["React","useContext","useState","Button","Card","Elevation","ReactPaginate","Settings","list","props","settings","page","setPage","users","numberOfItems","visitedPage","displayUsers","slice","map","item","TWO","text","assignee","difficulty","toggleComplete","id","complete","toString","pageCount","Math","ceil","length","changePage","selectedPage"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,QAAwC,mBAAxC;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,QAAT,QAAyB,wBAAzB;;;AAGA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAChC,QAAMC,QAAQ,GAAGT,UAAU,CAACM,QAAD,CAA3B;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAMW,KAAK,GAAGH,QAAQ,CAACI,aAAvB;AACA,QAAMC,WAAW,GAAGJ,IAAI,GAAGE,KAA3B;AAEA,QAAMG,YAAY,GAAGP,KAAK,CAACD,IAAN,CACpBS,KADoB,CACdF,WADc,EACDA,WAAW,GAAGF,KADb,EAEpBK,GAFoB,CAEfC,IAAD,IAAQ;AACN,wBACH;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,WAAW,EAAE,IAAnB;AAAyB,QAAA,SAAS,EAAEd,SAAS,CAACe,GAA9C;AAAA,gCACA;AAAA,oBAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,gBADA,eAEE;AAAA,iCAAG;AAAA,wCAAqBF,IAAI,CAACG,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,iCAAG;AAAA,uCAAoBH,IAAI,CAACI,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAMd,KAAK,CAACe,cAAN,CAAqBL,IAAI,CAACM,EAA1B,CAAvB;AAAA,mCAAiEN,IAAI,CAACO,QAAL,CAAcC,QAAd,EAAjE;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADG;AAUN,GAboB,CAArB;AAcA,QAAMC,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUrB,KAAK,CAACD,IAAN,CAAWuB,MAAX,GAAkBlB,KAA5B,CAAlB;;AACA,QAAMmB,UAAU,GAAG,QAAkB;AAAA,QAAjB;AAACC,MAAAA;AAAD,KAAiB;AACjCrB,IAAAA,OAAO,CAACqB,YAAD,CAAP;AACH,GAFD;;AAGA,sBACI;AAAA,eACCjB,YADD,eAEA,QAAC,aAAD;AACA,MAAA,aAAa,EAAE,eADf;AAEA,MAAA,SAAS,EAAE,WAFX;AAGA,MAAA,SAAS,EAAEY,SAHX;AAIA,MAAA,YAAY,EAAEI,UAJd;AAKA,MAAA,kBAAkB,EAAE,mBALpB;AAMA,MAAA,qBAAqB,EAAE,gBANvB;AAOA,MAAA,iBAAiB,EAAE,YAPnB;AAQA,MAAA,iBAAiB,EAAE,oBARnB;AASA,MAAA,eAAe,EAAE;AATjB;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADJ;AAmBH;;GA3CuBxB,I","sourcesContent":["import { React, useContext, useState } from 'react'\nimport { Button, Card, Elevation } from '@blueprintjs/core'\nimport ReactPaginate from 'react-paginate'\nimport { Settings } from '../../context/settings'\n\n\nexport default function list(props) {\n    const settings = useContext(Settings)\n    const [page, setPage] = useState(0)\n    const users = settings.numberOfItems\n    const visitedPage = page * users\n\n    const displayUsers = props.list\n    .slice(visitedPage, visitedPage + users)\n    .map((item)=>{\n           return (\n        <div>\n            <Card interactive={true} elevation={Elevation.TWO}>\n            <p>{item.text}</p>\n              <p><small>Assigned to: {item.assignee}</small></p>\n              <p><small>Difficulty: {item.difficulty}</small></p>\n              <Button onClick={() => props.toggleComplete(item.id)}>Complete: {item.complete.toString()}</Button>\n            </Card>\n        </div>\n    )\n    })\n    const pageCount = Math.ceil(props.list.length/users)\n    const changePage = ({selectedPage})=>{\n        setPage(selectedPage)\n    }\n    return(\n        <>\n        {displayUsers}\n        <ReactPaginate\n        previousLabel={'Previous page'}\n        nextLabel={'Next Page'}\n        pageCount={pageCount}\n        onPageChange={changePage}\n        containerClassName={'paginationButtons'}\n        previousLinkClassName={'previousButton'}\n        nextLinkClassName={'nextButton'}\n        disabledClassName={'paginationDisabled'}\n        activeClassName={'paginationActive'}\n        />\n        </>\n    )\n    \n\n \n}\n"]},"metadata":{},"sourceType":"module"}