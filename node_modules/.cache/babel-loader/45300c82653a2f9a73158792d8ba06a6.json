{"ast":null,"code":"var _jsxFileName = \"/home/nedal/todo-app/src/components/todo/todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport useForm from '../../hooks/form.js';\nimport List from './list.js';\nimport Form from './form.js';\nimport Header from './header.js';\nimport { v4 as uuid } from 'uuid';\nimport './todo.scss';\nimport { Button } from \"@blueprintjs/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ToDo = () => {\n  _s();\n\n  const [list, setList] = useState([]);\n  const [incomplete, setIncomplete] = useState([]);\n  const {\n    handleChange,\n    handleSubmit\n  } = useForm(addItem);\n\n  function addItem(item) {\n    item.id = uuid();\n    item.complete = false;\n    setList([...list, item]);\n  }\n\n  function deleteItem(id) {\n    const items = list.filter(item => item.id !== id);\n    setList(items);\n  }\n\n  function toggleComplete(id) {\n    const items = list.map(item => {\n      if (item.id == id) {\n        item.complete = !item.complete;\n      }\n\n      return item;\n    });\n    setList(items);\n  }\n\n  useEffect(() => {\n    let incompleteCount = list.filter(item => !item.complete).length;\n    setIncomplete(incompleteCount);\n    document.title = `To Do List: ${incomplete}`;\n  }, [list]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"To Do List: Manager (\", incomplete, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add To Do Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"To Do Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          name: \"text\",\n          type: \"text\",\n          placeholder: \"Item Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Assigned To\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          name: \"assignee\",\n          type: \"text\",\n          placeholder: \"Assignee Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Difficulty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          defaultValue: 3,\n          type: \"range\",\n          min: 1,\n          max: 5,\n          name: \"difficulty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Add Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), list.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Assigned to: \", item.assignee]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Difficulty: \", item.difficulty]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => toggleComplete(item.id),\n        children: [\"Complete: \", item.complete.toString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n};\n\n_s(ToDo, \"KGnI4uRsfdxDMA58OT2wFkFYU3Q=\", false, function () {\n  return [useForm];\n});\n\n_c = ToDo;\nexport default ToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"sources":["/home/nedal/todo-app/src/components/todo/todo.js"],"names":["React","useEffect","useState","useContext","useForm","List","Form","Header","v4","uuid","Button","ToDo","list","setList","incomplete","setIncomplete","handleChange","handleSubmit","addItem","item","id","complete","deleteItem","items","filter","toggleComplete","map","incompleteCount","length","document","title","text","assignee","difficulty","toString"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AACA,OAAO,aAAP;AACA,SAASC,MAAT,QAAuB,mBAAvB;;;;AAIA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM;AAAEc,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAiCb,OAAO,CAACc,OAAD,CAA9C;;AAEA,WAASA,OAAT,CAAiBC,IAAjB,EAAuB;AACrBA,IAAAA,IAAI,CAACC,EAAL,GAAUX,IAAI,EAAd;AACAU,IAAAA,IAAI,CAACE,QAAL,GAAgB,KAAhB;AACAR,IAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUO,IAAV,CAAD,CAAP;AACD;;AAED,WAASG,UAAT,CAAoBF,EAApB,EAAwB;AACtB,UAAMG,KAAK,GAAGX,IAAI,CAACY,MAAL,CAAYL,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAAhC,CAAd;AACAP,IAAAA,OAAO,CAACU,KAAD,CAAP;AACD;;AAED,WAASE,cAAT,CAAwBL,EAAxB,EAA4B;AAE1B,UAAMG,KAAK,GAAGX,IAAI,CAACc,GAAL,CAASP,IAAI,IAAI;AAC7B,UAAIA,IAAI,CAACC,EAAL,IAAWA,EAAf,EAAmB;AACjBD,QAAAA,IAAI,CAACE,QAAL,GAAgB,CAACF,IAAI,CAACE,QAAtB;AACD;;AACD,aAAOF,IAAP;AACD,KALa,CAAd;AAOAN,IAAAA,OAAO,CAACU,KAAD,CAAP;AAED;;AAEDtB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI0B,eAAe,GAAGf,IAAI,CAACY,MAAL,CAAYL,IAAI,IAAI,CAACA,IAAI,CAACE,QAA1B,EAAoCO,MAA1D;AACAb,IAAAA,aAAa,CAACY,eAAD,CAAb;AACAE,IAAAA,QAAQ,CAACC,KAAT,GAAkB,eAAchB,UAAW,EAA3C;AACD,GAJQ,EAIN,CAACF,IAAD,CAJM,CAAT;AAMA,sBACE;AAAA,4BACE;AAAA,6BACE;AAAA,4CAA0BE,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA;AAAA;AAAA;AAAA,YAJF,eAME;AAAM,MAAA,QAAQ,EAAEG,YAAhB;AAAA,8BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAIN;AAAA,gCACU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADV,eAEU;AAAA;AAAA;AAAA;AAAA,gBAFV,eAGU;AAAO,UAAA,QAAQ,EAAED,YAAjB;AAA+B,UAAA,IAAI,EAAC,MAApC;AAA2C,UAAA,IAAI,EAAC,MAAhD;AAAuD,UAAA,WAAW,EAAC;AAAnE;AAAA;AAAA;AAAA;AAAA,gBAHV;AAAA;AAAA;AAAA;AAAA;AAAA,cAJM,eASN;AAAA;AAAA;AAAA;AAAA,cATM,eASD;AAAA;AAAA;AAAA;AAAA,cATC,eAUE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAO,UAAA,QAAQ,EAAEA,YAAjB;AAA+B,UAAA,IAAI,EAAC,UAApC;AAA+C,UAAA,IAAI,EAAC,MAApD;AAA2D,UAAA,WAAW,EAAC;AAAvE;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAeE;AAAA;AAAA;AAAA;AAAA,cAfF,eAeO;AAAA;AAAA;AAAA;AAAA,cAfP,eAgBE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAO,UAAA,QAAQ,EAAEA,YAAjB;AAA+B,UAAA,YAAY,EAAE,CAA7C;AAAgD,UAAA,IAAI,EAAC,OAArD;AAA6D,UAAA,GAAG,EAAE,CAAlE;AAAqE,UAAA,GAAG,EAAE,CAA1E;AAA6E,UAAA,IAAI,EAAC;AAAlF;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,eAqBE;AAAA;AAAA;AAAA;AAAA,cArBF,eAqBO;AAAA;AAAA;AAAA;AAAA,cArBP,eAsBE;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAtBF,eAyBE;AAAA;AAAA;AAAA;AAAA,cAzBF,oBAyBQ;AAAA;AAAA;AAAA;AAAA,cAzBR;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,EAmCGJ,IAAI,CAACc,GAAL,CAASP,IAAI,iBACZ;AAAA,8BACE;AAAA,kBAAIA,IAAI,CAACY;AAAT;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,+BAAG;AAAA,sCAAqBZ,IAAI,CAACa,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,+BAAG;AAAA,qCAAoBb,IAAI,CAACc,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAK,QAAA,OAAO,EAAE,MAAMR,cAAc,CAACN,IAAI,CAACC,EAAN,CAAlC;AAAA,iCAAwDD,IAAI,CAACE,QAAL,CAAca,QAAd,EAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA;AAAA;AAAA;AAAA,cALF;AAAA,OAAUf,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA,YADD,CAnCH;AAAA,kBADF;AA+CD,CAnFD;;GAAMT,I;UAImCP,O;;;KAJnCO,I;AAqFN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport useForm from '../../hooks/form.js';\nimport List from './list.js'\nimport Form from './form.js'\nimport Header from './header.js'\n\nimport { v4 as uuid } from 'uuid';\nimport './todo.scss'\nimport { Button } from \"@blueprintjs/core\";\n\n\n\nconst ToDo = () => {\n\n  const [list, setList] = useState([]);\n  const [incomplete, setIncomplete] = useState([]);\n  const { handleChange, handleSubmit } = useForm(addItem);\n\n  function addItem(item) {\n    item.id = uuid();\n    item.complete = false;\n    setList([...list, item]);\n  }\n\n  function deleteItem(id) {\n    const items = list.filter(item => item.id !== id);\n    setList(items);\n  }\n\n  function toggleComplete(id) {\n\n    const items = list.map(item => {\n      if (item.id == id) {\n        item.complete = !item.complete;\n      }\n      return item;\n    });\n\n    setList(items);\n\n  }\n\n  useEffect(() => {\n    let incompleteCount = list.filter(item => !item.complete).length;\n    setIncomplete(incompleteCount);\n    document.title = `To Do List: ${incomplete}`;\n  }, [list]);\n\n  return (\n    <>\n      <header>\n        <h1>To Do List: Manager ({incomplete})</h1>\n      </header>\n      <br/>\n\n      <form onSubmit={handleSubmit}>\n\n        <h2>Add To Do Item</h2>\n\n<label>\n          <span>To Do Item</span>\n          <br/>\n          <input onChange={handleChange} name=\"text\" type=\"text\" placeholder=\"Item Details\" />\n        </label>\n<br/><br/>\n        <label>\n          <span>Assigned To</span>\n          <br/>\n          <input onChange={handleChange} name=\"assignee\" type=\"text\" placeholder=\"Assignee Name\" />\n        </label>\n        <br/><br/>\n        <label>\n          <span>Difficulty</span>\n          <br/>\n          <input onChange={handleChange} defaultValue={3} type=\"range\" min={1} max={5} name=\"difficulty\" />\n        </label>\n        <br/><br/>\n        <label>\n          <Button type=\"submit\">Add Item</Button>\n        </label>\n        <br/> <br/>\n      \n      </form>\n\n      {list.map(item => (\n        <div key={item.id}>\n          <p>{item.text}</p>\n          <p><small>Assigned to: {item.assignee}</small></p>\n          <p><small>Difficulty: {item.difficulty}</small></p>\n          <div onClick={() => toggleComplete(item.id)}>Complete: {item.complete.toString()}</div>\n          <hr />\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default ToDo;\n"]},"metadata":{},"sourceType":"module"}