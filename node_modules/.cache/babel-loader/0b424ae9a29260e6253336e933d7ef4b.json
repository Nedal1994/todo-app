{"ast":null,"code":"var _jsxFileName = \"/home/nedal/todo-app/src/components/todo/settings.js\",\n    _s = $RefreshSig$();\n\nimport { React, useContext } from 'react';\nimport context from '../../context/context';\nimport { Button, FormGroup, InputGroup, Card } from '@blueprintjs/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function settings() {\n  _s();\n\n  const contextSettings = useContext(context);\n  const setPages = contextSettings.page[1];\n\n  for (let i = 0; i < setPages; i++) {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: /*#__PURE__*/_jsxDEV(InputGroup, {\n        id: \"text-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(settings, \"mPMzySW2fUc9EId1I5vloS9g9L0=\");","map":{"version":3,"sources":["/home/nedal/todo-app/src/components/todo/settings.js"],"names":["React","useContext","context","Button","FormGroup","InputGroup","Card","settings","contextSettings","setPages","page","i"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,UAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,UAA5B,EAAwCC,IAAxC,QAAoD,mBAApD;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAE/B,QAAMC,eAAe,GAAGP,UAAU,CAACC,OAAD,CAAlC;AACA,QAAMO,QAAQ,GAAGD,eAAe,CAACE,IAAhB,CAAqB,CAArB,CAAjB;;AAEA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,QAAd,EAAuBE,CAAC,EAAxB,EACA,CAEC;;AAED,sBACI;AAAA,2BACI,QAAC,SAAD;AAAA,6BACI,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAjBuBJ,Q","sourcesContent":["import { React ,useContext} from 'react'\nimport context from '../../context/context'\nimport { Button, FormGroup, InputGroup, Card } from '@blueprintjs/core'\n\nexport default function settings() {\n\n    const contextSettings = useContext(context)\n    const setPages = contextSettings.page[1]\n\n    for(let i=0;i<setPages;i++)\n    {\n\n    }\n\n    return (\n        <div>\n            <FormGroup>\n                <InputGroup id=\"text-input\"/>\n            </FormGroup>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}