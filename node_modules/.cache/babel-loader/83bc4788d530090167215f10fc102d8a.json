{"ast":null,"code":"var _jsxFileName = \"/home/nedal/todo-app/src/app.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './app.scss';\nimport Login from './components/login/Login.js';\nimport Auth from './components/auth/Auth.js';\nimport { useEffect, useState, useContext } from 'react';\nimport useForm from './hooks/form.js';\nimport { v4 as uuid } from 'uuid';\nimport Header from './components/header/Header.js';\nimport Form from './components/form/Form.js';\nimport List from './components/list/List.js';\nimport ViewOptions from './components/viewOptions/viewOptions.js';\nimport { SettingsContext } from './context/settings.js';\nimport './app.scss';\nimport SignUp from './components/signUp/SignUp';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DATABASE_URL = process.env.REACT_APP_URL;\nexport default function App() {\n  _s();\n\n  const settings = useContext(SettingsContext);\n  settings;\n  const [list, setList] = useState([]);\n  const [incomplete, setIncomplete] = useState([]);\n  const {\n    handleChange,\n    handleSubmit\n  } = useForm(addItem);\n\n  async function addItem(item) {\n    item.id = uuid();\n    item.complete = false;\n\n    if (!list.includes(item)) {\n      let response = await axios.post(`${DATABASE_URL}/todo`, {\n        text: item.text,\n        assignee: item.assignee,\n        complete: item.complete,\n        difficulty: item.difficulty\n      });\n      setList([...list, response.data]);\n    } else {\n      alert('That to-do item already exsists!');\n    }\n  }\n\n  async function deleteItem(id) {\n    await axios.delete(`${DATABASE_URL}/todo/${id}`);\n    const items = list.filter(item => item.id !== id);\n    setList(items);\n  }\n\n  async function toggleComplete(id) {\n    const items = list.map(item => {\n      if (item.id === id) {\n        item.complete = !item.complete;\n      }\n\n      return item;\n    });\n    setList(items);\n  }\n\n  useEffect(() => {\n    let incompleteCount = list.filter(item => !item.complete).length;\n    setIncomplete(incompleteCount);\n    document.title = `To Do List: ${incomplete}`;\n  }, [list]);\n  useEffect(() => {\n    handleGet(); // pull user preferences from storage on page load\n\n    let storage = localStorage.getItem('userPreferences');\n\n    if (storage) {\n      let parsedObject = JSON.parse(storage);\n      settings.setNumberOfItems(parsedObject.numberOfItems);\n      settings.setCompleted(parsedObject.showCompleted);\n    }\n  }, []);\n\n  async function handleGet() {\n    let response = await axios.get(`${DATABASE_URL}/todo`);\n    setList(response.data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SignUp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Auth, {\n      capability: \"read\",\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        incomplete: incomplete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Auth, {\n      capability: \"read\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"formContainer\",\n        children: [/*#__PURE__*/_jsxDEV(ViewOptions, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Auth, {\n          capability: \"create\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            handleSubmit: handleSubmit,\n            handleChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Auth, {\n      capability: \"read\",\n      children: /*#__PURE__*/_jsxDEV(List, {\n        list: list,\n        toggleComplete: toggleComplete,\n        deleteItem: deleteItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"ixS5XRR/HT1JofRffEmml/y+tI0=\", false, function () {\n  return [useForm];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/nedal/todo-app/src/app.js"],"names":["React","Login","Auth","useEffect","useState","useContext","useForm","v4","uuid","Header","Form","List","ViewOptions","SettingsContext","SignUp","axios","DATABASE_URL","process","env","REACT_APP_URL","App","settings","list","setList","incomplete","setIncomplete","handleChange","handleSubmit","addItem","item","id","complete","includes","response","post","text","assignee","difficulty","data","alert","deleteItem","delete","items","filter","toggleComplete","map","incompleteCount","length","document","title","handleGet","storage","localStorage","getItem","parsedObject","JSON","parse","setNumberOfItems","numberOfItems","setCompleted","showCompleted","get"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,OAAOC,WAAP,MAAwB,yCAAxB;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAR,CAAYC,aAAjC;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAMC,QAAQ,GAAGhB,UAAU,CAACQ,eAAD,CAA3B;AACAQ,EAAAA,QAAQ;AACR,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACoB,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM;AAAEsB,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAiCrB,OAAO,CAACsB,OAAD,CAA9C;;AAGA,iBAAeA,OAAf,CAAuBC,IAAvB,EAA6B;AAC3BA,IAAAA,IAAI,CAACC,EAAL,GAAUtB,IAAI,EAAd;AACAqB,IAAAA,IAAI,CAACE,QAAL,GAAgB,KAAhB;;AAEA,QAAI,CAACT,IAAI,CAACU,QAAL,CAAcH,IAAd,CAAL,EAA0B;AACxB,UAAII,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAN,CAAY,GAAElB,YAAa,OAA3B,EAAmC;AAAEmB,QAAAA,IAAI,EAAEN,IAAI,CAACM,IAAb;AAAmBC,QAAAA,QAAQ,EAAEP,IAAI,CAACO,QAAlC;AAA4CL,QAAAA,QAAQ,EAAEF,IAAI,CAACE,QAA3D;AAAqEM,QAAAA,UAAU,EAAER,IAAI,CAACQ;AAAtF,OAAnC,CAArB;AACAd,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUW,QAAQ,CAACK,IAAnB,CAAD,CAAP;AACD,KAHD,MAGO;AACLC,MAAAA,KAAK,CAAC,kCAAD,CAAL;AACD;AACF;;AAED,iBAAeC,UAAf,CAA0BV,EAA1B,EAA8B;AAC5B,UAAMf,KAAK,CAAC0B,MAAN,CAAc,GAAEzB,YAAa,SAAQc,EAAG,EAAxC,CAAN;AACA,UAAMY,KAAK,GAAGpB,IAAI,CAACqB,MAAL,CAAYd,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAAhC,CAAd;AACAP,IAAAA,OAAO,CAACmB,KAAD,CAAP;AACD;;AAED,iBAAeE,cAAf,CAA8Bd,EAA9B,EAAkC;AAChC,UAAMY,KAAK,GAAGpB,IAAI,CAACuB,GAAL,CAAShB,IAAI,IAAI;AAC7B,UAAIA,IAAI,CAACC,EAAL,KAAYA,EAAhB,EAAoB;AAClBD,QAAAA,IAAI,CAACE,QAAL,GAAgB,CAACF,IAAI,CAACE,QAAtB;AACD;;AACD,aAAOF,IAAP;AACD,KALa,CAAd;AAOAN,IAAAA,OAAO,CAACmB,KAAD,CAAP;AACD;;AAEDvC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI2C,eAAe,GAAGxB,IAAI,CAACqB,MAAL,CAAYd,IAAI,IAAI,CAACA,IAAI,CAACE,QAA1B,EAAoCgB,MAA1D;AACAtB,IAAAA,aAAa,CAACqB,eAAD,CAAb;AACAE,IAAAA,QAAQ,CAACC,KAAT,GAAkB,eAAczB,UAAW,EAA3C;AACD,GAJQ,EAIN,CAACF,IAAD,CAJM,CAAT;AAOAnB,EAAAA,SAAS,CAAC,MAAM;AACd+C,IAAAA,SAAS,GADK,CAEd;;AACA,QAAIC,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAd;;AACA,QAAIF,OAAJ,EAAa;AACX,UAAIG,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWL,OAAX,CAAnB;AACA9B,MAAAA,QAAQ,CAACoC,gBAAT,CAA0BH,YAAY,CAACI,aAAvC;AACArC,MAAAA,QAAQ,CAACsC,YAAT,CAAsBL,YAAY,CAACM,aAAnC;AACD;AACF,GATQ,EASN,EATM,CAAT;;AAWA,iBAAeV,SAAf,GAA2B;AACzB,QAAIjB,QAAQ,GAAG,MAAMlB,KAAK,CAAC8C,GAAN,CAAW,GAAE7C,YAAa,OAA1B,CAArB;AACAO,IAAAA,OAAO,CAACU,QAAQ,CAACK,IAAV,CAAP;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,IAAD;AAAM,MAAA,UAAU,EAAC,MAAjB;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,UAAU,EAAEd;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF,eAME,QAAC,IAAD;AAAM,MAAA,UAAU,EAAC,MAAjB;AAAA,6BACE;AAAK,QAAA,EAAE,EAAC,eAAR;AAAA,gCACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAM,UAAA,UAAU,EAAC,QAAjB;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,YAAY,EAAEG,YAApB;AAAkC,YAAA,YAAY,EAAED;AAAhD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF,eAcE,QAAC,IAAD;AAAM,MAAA,UAAU,EAAC,MAAjB;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEJ,IAAZ;AAAkB,QAAA,cAAc,EAAEsB,cAAlC;AAAkD,QAAA,UAAU,EAAEJ;AAA9D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA,kBADF;AAoBD;;GAhFuBpB,G;UAKiBd,O;;;KALjBc,G","sourcesContent":["import React from 'react';\nimport './app.scss';\nimport Login from './components/login/Login.js';\nimport Auth from './components/auth/Auth.js';\nimport { useEffect, useState, useContext } from 'react';\nimport useForm from './hooks/form.js';\nimport { v4 as uuid } from 'uuid';\nimport Header from './components/header/Header.js';\nimport Form from './components/form/Form.js';\nimport List from './components/list/List.js';\nimport ViewOptions from './components/viewOptions/viewOptions.js';\nimport { SettingsContext } from './context/settings.js';\nimport './app.scss';\nimport SignUp from './components/signUp/SignUp';\nimport axios from 'axios';\n\nconst DATABASE_URL = process.env.REACT_APP_URL;\n\nexport default function App() {\n  const settings = useContext(SettingsContext);\n  settings;\n  const [list, setList] = useState([]);\n  const [incomplete, setIncomplete] = useState([]);\n  const { handleChange, handleSubmit } = useForm(addItem);\n\n\n  async function addItem(item) {\n    item.id = uuid();\n    item.complete = false;\n\n    if (!list.includes(item)) {\n      let response = await axios.post(`${DATABASE_URL}/todo`, { text: item.text, assignee: item.assignee, complete: item.complete, difficulty: item.difficulty});\n      setList([...list, response.data]);\n    } else {\n      alert('That to-do item already exsists!');\n    }\n  }\n\n  async function deleteItem(id) {\n    await axios.delete(`${DATABASE_URL}/todo/${id}`);\n    const items = list.filter(item => item.id !== id);\n    setList(items);\n  }\n\n  async function toggleComplete(id) {\n    const items = list.map(item => {\n      if (item.id === id) {\n        item.complete = !item.complete;\n      }\n      return item;\n    });\n\n    setList(items);\n  }\n\n  useEffect(() => {\n    let incompleteCount = list.filter(item => !item.complete).length;\n    setIncomplete(incompleteCount);\n    document.title = `To Do List: ${incomplete}`;\n  }, [list]);\n\n\n  useEffect(() => {\n    handleGet();\n    // pull user preferences from storage on page load\n    let storage = localStorage.getItem('userPreferences');\n    if (storage) {\n      let parsedObject = JSON.parse(storage);\n      settings.setNumberOfItems(parsedObject.numberOfItems);\n      settings.setCompleted(parsedObject.showCompleted);\n    }\n  }, []);\n\n  async function handleGet() {\n    let response = await axios.get(`${DATABASE_URL}/todo`);\n    setList(response.data);\n  }\n\n  return (\n    <>\n      <Login />\n      <SignUp />\n      <Auth capability=\"read\">\n        <Header incomplete={incomplete} />\n      </Auth>\n      <Auth capability=\"read\">\n        <div id=\"formContainer\">\n          <ViewOptions />\n          <Auth capability=\"create\">\n            <Form handleSubmit={handleSubmit} handleChange={handleChange} />\n          </Auth>\n        </div>\n      </Auth>\n      <Auth capability=\"read\">\n        <List list={list} toggleComplete={toggleComplete} deleteItem={deleteItem} />\n      </Auth>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}