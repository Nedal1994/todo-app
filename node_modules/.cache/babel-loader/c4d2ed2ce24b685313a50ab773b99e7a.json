{"ast":null,"code":"var _jsxFileName = \"/home/nedal/todo-app/src/components/todo/todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport useForm from '../../hooks/form.js';\nimport { ThemeContext } from '../../context/theme'; // import { settingsContext } from '../../context/context';\n\nimport Form from '../../components/todo/form';\nimport List from '../../components/todo/list';\nimport { v4 as uuid } from 'uuid';\nimport './todo.scss';\nimport { Switch } from \"@blueprintjs/core\";\nimport { Card } from \"@blueprintjs/core\";\nimport Settings from '../src/components/todo/settings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ToDo = () => {\n  _s();\n\n  // const site = useContext(settingsContext)\n  const theme = useContext(ThemeContext);\n  const [list, setList] = useState([]);\n  const [incomplete, setIncomplete] = useState([]);\n  const {\n    handleChange,\n    handleSubmit\n  } = useForm(addItem);\n\n  function addItem(item) {\n    item.id = uuid();\n    item.complete = false;\n    setList([...list, item]);\n  }\n\n  function deleteItem(id) {\n    const items = list.filter(item => item.id !== id);\n    setList(items);\n  }\n\n  function toggleComplete(id) {\n    const items = list.map(item => {\n      if (item.id == id) {\n        item.complete = !item.complete;\n      }\n\n      return item;\n    });\n    setList(items);\n  }\n\n  useEffect(() => {\n    let incompleteCount = list.filter(item => !item.complete).length;\n    setIncomplete(incompleteCount);\n    document.title = `To Do List: ${incomplete}`;\n  }, [list]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"To Do List: Manager (\", incomplete, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      handleChange: handleChange,\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Settings, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      incomplete: incomplete,\n      list: list,\n      toggleComplete: toggleComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: list.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"Assigned to: \", item.assignee]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"Difficulty: \", item.difficulty]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => toggleComplete(item.id),\n            children: [\"Complete: \", item.complete.toString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ToDo, \"c1aNTkU1VWvTexEf6dz2dDHUi9U=\", false, function () {\n  return [useForm];\n});\n\n_c = ToDo;\nexport default ToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"sources":["/home/nedal/todo-app/src/components/todo/todo.js"],"names":["React","useEffect","useState","useContext","useForm","ThemeContext","Form","List","v4","uuid","Switch","Card","Settings","ToDo","theme","list","setList","incomplete","setIncomplete","handleChange","handleSubmit","addItem","item","id","complete","deleteItem","items","filter","toggleComplete","map","incompleteCount","length","document","title","text","assignee","difficulty","toString"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport useForm from '../../hooks/form.js';\nimport { ThemeContext } from '../../context/theme';\n// import { settingsContext } from '../../context/context';\nimport Form from '../../components/todo/form'\nimport List from '../../components/todo/list'\n\nimport { v4 as uuid } from 'uuid';\nimport './todo.scss'\nimport { Switch } from \"@blueprintjs/core\";\nimport { Card } from \"@blueprintjs/core\";\nimport Settings from '../src/components/todo/settings'\n\n\nconst ToDo = () => {\n  // const site = useContext(settingsContext)\n  const theme = useContext(ThemeContext)\n\n  const [list, setList] = useState([]);\n  const [incomplete, setIncomplete] = useState([]);\n  const { handleChange, handleSubmit } = useForm(addItem);\n\n  function addItem(item) {\n    item.id = uuid();\n    item.complete = false;\n    setList([...list, item]);\n  }\n\n  function deleteItem(id) {\n    const items = list.filter(item => item.id !== id);\n    setList(items);\n  }\n\n  function toggleComplete(id) {\n\n    const items = list.map(item => {\n      if (item.id == id) {\n        item.complete = !item.complete;\n      }\n      return item;\n    });\n\n    setList(items);\n\n  }\n\n  useEffect(() => {\n    let incompleteCount = list.filter(item => !item.complete).length;\n    setIncomplete(incompleteCount);\n    document.title = `To Do List: ${incomplete}`;\n  }, [list]);\n\n  return (\n    <>\n      <header>\n        <h1>To Do List: Manager ({incomplete})</h1>\n      </header>\n      <br />\n      <Form\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n      />\n      <Settings/>\n      <List\n        incomplete={incomplete}\n        list={list}\n        toggleComplete={toggleComplete}\n      />\n      <section>\n        <Card>\n          {list.map(item => (\n            <div key={item.id}>\n              <p>{item.text}</p>\n              <p><small>Assigned to: {item.assignee}</small></p>\n              <p><small>Difficulty: {item.difficulty}</small></p>\n              <div onClick={() => toggleComplete(item.id)}>Complete: {item.complete.toString()}</div>\n            </div>\n\n          ))}\n        </Card></section>\n    </>\n  );\n};\n\nexport default ToDo;\n"]},"metadata":{},"sourceType":"module"}