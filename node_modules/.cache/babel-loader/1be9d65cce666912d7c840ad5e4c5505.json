{"ast":null,"code":"var _jsxFileName = \"/home/nedal/todo-app/src/components/todo/List/list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Button, Card, Elevation } from \"@blueprintjs/core\";\nimport ReactPaginate from \"react-paginate\";\nimport { SettingsContext } from \"../context/context\";\nimport Auth from '../context/auth';\nimport \"./list.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction List(props) {\n  _s();\n\n  const settings = useContext(SettingsContext);\n  const [pageNumber, setPageNumber] = useState(0);\n  const [pageCount, setPageCount] = useState(1);\n  let usersPerPage = settings.numOfItems;\n  console.log(settings.numOfItems, settings);\n  const pagesVisited = pageNumber * usersPerPage; //function to display completedItems:\n\n  function display(status) {\n    let arrOfCompletedItem;\n\n    if (status == true) {\n      arrOfCompletedItem = props.list.filter(item => item.complete);\n    } else {\n      return props.list;\n    }\n\n    return arrOfCompletedItem;\n  }\n\n  console.log(display(settings.display));\n  const displayUsers = display(settings.display).slice(pagesVisited, pagesVisited + usersPerPage).map(item => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div-flex1\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        interactive: true,\n        elevation: Elevation.TWO,\n        className: \"cardDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Assigned to: \", item.assignee]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Difficulty: \", item.difficulty]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => props.toggleComplete(item.id),\n          children: [\"Complete: \", item.complete.toString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this);\n  });\n  console.log(settings.numOfItems, \"settings.numOfItems\");\n  useEffect(() => {\n    let page = Math.ceil(props.list.length / settings.numOfItems);\n    setPageCount(page);\n    console.log(page, \"page\", settings.numOfItems, \"settings.numOfItems\");\n  }, [props.list]);\n\n  const changePage = _ref => {\n    let {\n      selected\n    } = _ref;\n    setPageNumber(selected);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [displayUsers, /*#__PURE__*/_jsxDEV(Auth, {\n      capability: \"read\",\n      children: /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        previousLabel: \"Previous\",\n        nextLabel: \"Next\",\n        pageCount: pageCount,\n        onPageChange: changePage,\n        containerClassName: \"paginationBttns\",\n        previousLinkClassName: \"previousBttn\",\n        nextLinkClassName: \"nextBttn\",\n        disabledClassName: \"paginationDisabled\",\n        activeClassName: \"paginationActive\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(List, \"HQiJsSmvXe9QjUjZDS+Q0G38Bt0=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/nedal/todo-app/src/components/todo/List/list.js"],"names":["React","useContext","useEffect","useState","Button","Card","Elevation","ReactPaginate","SettingsContext","Auth","List","props","settings","pageNumber","setPageNumber","pageCount","setPageCount","usersPerPage","numOfItems","console","log","pagesVisited","display","status","arrOfCompletedItem","list","filter","item","complete","displayUsers","slice","map","TWO","text","assignee","difficulty","toggleComplete","id","toString","page","Math","ceil","length","changePage","selected"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,QAAwC,mBAAxC;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAO,aAAP;;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB,QAAMC,QAAQ,GAAGX,UAAU,CAACO,eAAD,CAA3B;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,CAAD,CAA1C;AACA,MAAIc,YAAY,GAAGL,QAAQ,CAACM,UAA5B;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACM,UAArB,EAAiCN,QAAjC;AAEA,QAAMS,YAAY,GAAGR,UAAU,GAAGI,YAAlC,CARmB,CAWnB;;AACA,WAASK,OAAT,CAAiBC,MAAjB,EAAyB;AACvB,QAAIC,kBAAJ;;AACA,QAAGD,MAAM,IAAE,IAAX,EAAgB;AACdC,MAAAA,kBAAkB,GAACb,KAAK,CAACc,IAAN,CAAWC,MAAX,CAAmBC,IAAD,IAAQA,IAAI,CAACC,QAA/B,CAAnB;AAED,KAHD,MAII;AACF,aAAOjB,KAAK,CAACc,IAAb;AACD;;AACD,WAAOD,kBAAP;AACD;;AAEDL,EAAAA,OAAO,CAACC,GAAR,CAAYE,OAAO,CAACV,QAAQ,CAACU,OAAV,CAAnB;AACA,QAAMO,YAAY,GAAGP,OAAO,CAACV,QAAQ,CAACU,OAAV,CAAP,CAClBQ,KADkB,CACZT,YADY,EACEA,YAAY,GAAGJ,YADjB,EAElBc,GAFkB,CAEbJ,IAAD,IAAU;AACb,wBACE;AAAmB,MAAA,SAAS,EAAC,WAA7B;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,WAAW,EAAE,IADf;AAEE,QAAA,SAAS,EAAErB,SAAS,CAAC0B,GAFvB;AAGE,QAAA,SAAS,EAAC,SAHZ;AAAA,gCAKE;AAAA,oBAAIL,IAAI,CAACM;AAAT;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAA,iCACE;AAAA,wCAAqBN,IAAI,CAACO,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF,eASE;AAAA,iCACE;AAAA,uCAAoBP,IAAI,CAACQ,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBATF,eAaE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAMxB,KAAK,CAACyB,cAAN,CAAqBT,IAAI,CAACU,EAA1B,CAAvB;AAAA,mCACaV,IAAI,CAACC,QAAL,CAAcU,QAAd,EADb;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,OAAUX,IAAI,CAACU,EAAf;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD,GAxBkB,CAArB;AAyBAlB,EAAAA,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACM,UAArB,EAAiC,qBAAjC;AACAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIqC,IAAI,GAAGC,IAAI,CAACC,IAAL,CAAU9B,KAAK,CAACc,IAAN,CAAWiB,MAAX,GAAoB9B,QAAQ,CAACM,UAAvC,CAAX;AACAF,IAAAA,YAAY,CAACuB,IAAD,CAAZ;AACApB,IAAAA,OAAO,CAACC,GAAR,CAAYmB,IAAZ,EAAiB,MAAjB,EAAwB3B,QAAQ,CAACM,UAAjC,EAA4C,qBAA5C;AACD,GAJQ,EAIN,CAACP,KAAK,CAACc,IAAP,CAJM,CAAT;;AAKA,QAAMkB,UAAU,GAAG,QAAkB;AAAA,QAAjB;AAAEC,MAAAA;AAAF,KAAiB;AACnC9B,IAAAA,aAAa,CAAC8B,QAAD,CAAb;AACD,GAFD;;AAGA,sBACE;AAAA,eACGf,YADH,eAEE,QAAC,IAAD;AAAM,MAAA,UAAU,EAAC,MAAjB;AAAA,6BACA,QAAC,aAAD;AACE,QAAA,aAAa,EAAE,UADjB;AAEE,QAAA,SAAS,EAAE,MAFb;AAGE,QAAA,SAAS,EAAEd,SAHb;AAIE,QAAA,YAAY,EAAE4B,UAJhB;AAKE,QAAA,kBAAkB,EAAE,iBALtB;AAME,QAAA,qBAAqB,EAAE,cANzB;AAOE,QAAA,iBAAiB,EAAE,UAPrB;AAQE,QAAA,iBAAiB,EAAE,oBARrB;AASE,QAAA,eAAe,EAAE;AATnB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAkBD;;GA7EQjC,I;;KAAAA,I;AA+ET,eAAeA,IAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { Button, Card, Elevation } from \"@blueprintjs/core\";\nimport ReactPaginate from \"react-paginate\";\nimport { SettingsContext } from \"../context/context\";\nimport Auth from '../context/auth'\nimport \"./list.scss\";\n\nfunction List(props) {\n  const settings = useContext(SettingsContext);\n  const [pageNumber, setPageNumber] = useState(0);\n  const [pageCount, setPageCount] = useState(1);\n  let usersPerPage = settings.numOfItems;\n\n  console.log(settings.numOfItems, settings);\n\n  const pagesVisited = pageNumber * usersPerPage;\n\n\n  //function to display completedItems:\n  function display(status) {\n    let arrOfCompletedItem;\n    if(status==true){\n      arrOfCompletedItem=props.list.filter((item)=>item.complete)\n\n    }\n    else{\n      return props.list\n    }\n    return arrOfCompletedItem;\n  }\n\n  console.log(display(settings.display) ) \n  const displayUsers = display(settings.display)\n    .slice(pagesVisited, pagesVisited + usersPerPage)\n    .map((item) => {\n      return (\n        <div key={item.id} className=\"div-flex1\">\n          <Card\n            interactive={true}\n            elevation={Elevation.TWO}\n            className=\"cardDiv\"\n          >\n            <p>{item.text}</p>\n            <p>\n              <small>Assigned to: {item.assignee}</small>\n            </p>\n            <p>\n              <small>Difficulty: {item.difficulty}</small>\n            </p>\n\n            <Button onClick={() => props.toggleComplete(item.id)}>\n              Complete: {item.complete.toString()}\n            </Button>\n          </Card>\n        </div>\n      );\n    });\n  console.log(settings.numOfItems, \"settings.numOfItems\");\n  useEffect(() => {\n    let page = Math.ceil(props.list.length / settings.numOfItems);\n    setPageCount(page);\n    console.log(page,\"page\",settings.numOfItems,\"settings.numOfItems\");\n  }, [props.list]);\n  const changePage = ({ selected }) => {\n    setPageNumber(selected);\n  };\n  return (\n    <>\n      {displayUsers}\n      <Auth capability='read'>\n      <ReactPaginate\n        previousLabel={\"Previous\"}\n        nextLabel={\"Next\"}\n        pageCount={pageCount}\n        onPageChange={changePage}\n        containerClassName={\"paginationBttns\"}\n        previousLinkClassName={\"previousBttn\"}\n        nextLinkClassName={\"nextBttn\"}\n        disabledClassName={\"paginationDisabled\"}\n        activeClassName={\"paginationActive\"}\n      />\n      </Auth>\n    </>\n  );\n}\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}