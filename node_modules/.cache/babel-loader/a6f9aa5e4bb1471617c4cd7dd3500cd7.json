{"ast":null,"code":"var _jsxFileName = \"/home/nedal/todo-app/src/components/auth/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useContext } from 'react';\nimport { When } from 'react-if';\nimport { AuthContext } from '../../context/auth.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Auth(props) {\n  _s();\n\n  let auth = useContext(AuthContext);\n  const isLoggedIn = auth.isLoggedIn;\n  const authorized = props.capability ? auth.isAuthorized(props.capability) : true;\n  const okToRender = isLoggedIn && authorized;\n  return /*#__PURE__*/_jsxDEV(When, {\n    condition: okToRender,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Auth, \"2E+KaGHVlJMhtGjyKmHdHkA1EKU=\");\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/home/nedal/todo-app/src/components/auth/Auth.js"],"names":["React","useContext","When","AuthContext","Auth","props","auth","isLoggedIn","authorized","capability","isAuthorized","okToRender","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,IAAT,QAAqB,UAArB;AAEA,SAASC,WAAT,QAA4B,uBAA5B;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAEnB,MAAIC,IAAI,GAAGL,UAAU,CAACE,WAAD,CAArB;AAEA,QAAMI,UAAU,GAAGD,IAAI,CAACC,UAAxB;AACA,QAAMC,UAAU,GAAGH,KAAK,CAACI,UAAN,GAAmBH,IAAI,CAACI,YAAL,CAAkBL,KAAK,CAACI,UAAxB,CAAnB,GAAyD,IAA5E;AACA,QAAME,UAAU,GAAGJ,UAAU,IAAIC,UAAjC;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAEG,UAAjB;AAAA,cACGN,KAAK,CAACO;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAbQR,I;;KAAAA,I;AAeT,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport { useContext } from 'react';\nimport { When } from 'react-if';\n\nimport { AuthContext } from '../../context/auth.js';\n\nfunction Auth(props) {\n\n  let auth = useContext(AuthContext);\n\n  const isLoggedIn = auth.isLoggedIn;\n  const authorized = props.capability ? auth.isAuthorized(props.capability) : true;\n  const okToRender = isLoggedIn && authorized;\n\n  return (\n    <When condition={okToRender}>\n      {props.children}\n    </When>\n  );\n}\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}