{"ast":null,"code":"var _jsxFileName = \"/home/nedal/todo-app/src/context/settings.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // our settings context singleton from which we can derive/ get access to our Provider\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SettingsContext = /*#__PURE__*/React.createContext();\n\nfunction Settings(props) {\n  _s();\n\n  // In order for context behaviors to hook into our react application, we need to define them with useState hook\n  const [numberOfItems, setNumberOfItems] = useState(4);\n  const [showCompleted, setCompleted] = useState(false);\n  const state = {\n    numberOfItems,\n    showCompleted,\n    setNumberOfItems: number => {\n      setNumberOfItems(number);\n    },\n    setCompleted: boolean => {\n      setCompleted(boolean);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(SettingsContext.Provider, {\n    value: state,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Settings, \"a3rsP+dFM1CL9pVeCB7/l+vUAUE=\");\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["/home/nedal/todo-app/src/context/settings.js"],"names":["React","useState","SettingsContext","createContext","Settings","props","numberOfItems","setNumberOfItems","showCompleted","setCompleted","state","number","boolean","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;;;AACA,OAAO,MAAMC,eAAe,gBAAGF,KAAK,CAACG,aAAN,EAAxB;;AAEP,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAEvB;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,CAAD,CAAlD;AACA,QAAM,CAACO,aAAD,EAAgBC,YAAhB,IAAgCR,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAMS,KAAK,GAAG;AACZJ,IAAAA,aADY;AAEZE,IAAAA,aAFY;AAGZD,IAAAA,gBAAgB,EAAEI,MAAD,IAAY;AAC3BJ,MAAAA,gBAAgB,CAACI,MAAD,CAAhB;AACD,KALW;AAMZF,IAAAA,YAAY,EAAEG,OAAD,IAAa;AACxBH,MAAAA,YAAY,CAACG,OAAD,CAAZ;AACD;AARW,GAAd;AAWA,sBACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAEF,KAAjC;AAAA,cACGL,KAAK,CAACQ;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAtBQT,Q;;KAAAA,Q;AAwBT,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\n\n// our settings context singleton from which we can derive/ get access to our Provider\nexport const SettingsContext = React.createContext();\n\nfunction Settings(props) {\n\n  // In order for context behaviors to hook into our react application, we need to define them with useState hook\n  const [numberOfItems, setNumberOfItems] = useState(4);\n  const [showCompleted, setCompleted] = useState(false);\n\n  const state = {\n    numberOfItems,\n    showCompleted,\n    setNumberOfItems:(number) => {\n      setNumberOfItems(number);\n    },\n    setCompleted:(boolean) => {\n      setCompleted(boolean);\n    }\n  };\n\n  return (\n    <SettingsContext.Provider value={state}>\n      {props.children}\n    </SettingsContext.Provider>\n  );\n}\n\nexport default Settings;\n"]},"metadata":{},"sourceType":"module"}